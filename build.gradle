buildscript {
    ext {
        superCsvVersion = '2.4.0'
        poiVer = '4.1.2'
        guavaVersion = '29.0-jre'
        jacksonVersion = '2.10.+'
        slf4jVersion = '1.7.28'
        logbackVersion = '1.2.3'
    }
    repositories {
        mavenCentral()
        maven {
            url "https://plugins.gradle.org/m2/"
        }
    }
}

plugins {
    id 'java-library'
    id 'idea'
    id 'jacoco'
    id "org.sonarqube" version "3.0"
    id "org.scoverage" version "5.0.0"
}

group 'joycai'
version '1.0.3'

java {
    sourceCompatibility = JavaVersion.VERSION_1_8
    targetCompatibility = JavaVersion.VERSION_1_8
}

jacoco {
    toolVersion = "0.8.4"
}

jacocoTestReport {
    reports {
        xml.enabled true
        csv.enabled false
        html.destination file("${buildDir}/jacocoHtml")
    }
}

repositories {
    mavenCentral()
    jcenter()
}

dependencies {
    api group: 'org.slf4j', name: 'slf4j-api', version: slf4jVersion
    implementation group: 'com.google.guava', name: 'guava', version: guavaVersion
    implementation group: 'com.fasterxml.jackson.core', name: 'jackson-databind', version: jacksonVersion
    //poi
    implementation group: 'org.apache.poi', name: 'poi', version: poiVer
    implementation group: 'org.apache.poi', name: 'poi-ooxml', version: poiVer

    //csv
    implementation group: 'net.sf.supercsv', name: 'super-csv-java8', version: superCsvVersion

    testImplementation group: 'ch.qos.logback', name: 'logback-classic', version: "${logbackVersion}"
    testImplementation(platform('org.junit:junit-bom:5.7.0'))
    testImplementation('org.junit.jupiter:junit-jupiter')
    testImplementation('org.mockito:mockito-core:3.6.28')
}

tasks.withType(JavaCompile) {
    options.encoding = "UTF-8"
}

task sourcesJar(type: Jar, dependsOn: classes) {
    archiveClassifier.set('sources')
    from sourceSets.main.allSource
}

task createDirs {
    sourceSets*.java.srcDirs*.each { it.mkdirs() }
    sourceSets*.resources.srcDirs*.each { it.mkdirs() }
}

test {
    useJUnitPlatform()
    testLogging {
        events "passed", "skipped", "failed"
    }
}